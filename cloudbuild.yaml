steps:
  - name: 'gcr.io/kaniko-project/executor:latest'
    id: Build-Python-App
    args:
      - '--destination=${_ARTIFACT_REGISTRY_REPO}/${_PYTHON_APP_IMAGE_NAME}:${SHORT_SHA}'
      - '--context=dir://.'
      - '--dockerfile=Dockerfile'
      - '--cache=false'

  - name: 'gcr.io/kaniko-project/executor:latest'
    id: Build-MCP-Server
    args:
      - '--destination=${_ARTIFACT_REGISTRY_REPO}/${_MCP_IMAGE_NAME}:${SHORT_SHA}'
      - '--context=dir://.'
      - '--dockerfile=Dockerfile.mcp'
      - '--cache=false'

  - name: 'gcr.io/kaniko-project/executor:latest'
    id: Build-LangGraph-Agent
    args:
      - '--destination=${_ARTIFACT_REGISTRY_REPO}/${_LANGGRAPH_IMAGE_NAME}:${SHORT_SHA}'
      - '--context=dir://.'
      - '--dockerfile=Dockerfile.langchain'
      - '--cache=false'

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Deploy-LangGraph-Agent
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME_LANGGRAPH}'
      - '--project=${_GCP_PROJECT_ID}'
      - '--image=${_ARTIFACT_REGISTRY_REPO}/${_LANGGRAPH_IMAGE_NAME}:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--port=${_LANGGRAPH_PORT}'
      - '--allow-unauthenticated'
      - '--set-env-vars=^##^GOOGLE_API_KEY=${_GOOGLE_API_KEY}'
      - '--memory=512Mi'
      - '--quiet'
    waitFor: ['Build-LangGraph-Agent']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Deploy-MCP-Server
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME_MCP}'
      - '--project=${_GCP_PROJECT_ID}'
      - '--image=${_ARTIFACT_REGISTRY_REPO}/${_MCP_IMAGE_NAME}:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--port=${_MCP_SERVER_PORT}'
      - '--allow-unauthenticated'
      - '--set-env-vars=^##^GITHUB_PERSONAL_ACCESS_TOKEN=${_GITHUB_TOKEN}'
      - '--memory=512Mi'
      - '--quiet'
    waitFor: ['Build-MCP-Server']

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Deploy-Streamlit
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME_STREAMLIT}'
      - '--project=${_GCP_PROJECT_ID}'
      - '--image=${_ARTIFACT_REGISTRY_REPO}/${_PYTHON_APP_IMAGE_NAME}:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--port=8080'
      - '--allow-unauthenticated'
      - '--set-env-vars=^##^GOOGLE_GENAI_USE_VERTEXAI=1##GOOGLE_CLOUD_PROJECT=${_GCP_PROJECT_ID}##GOOGLE_CLOUD_LOCATION=${_REGION}##GOOGLE_API_KEY=${_GOOGLE_API_KEY}##AGENT_MODEL_NAME=${_AGENT_MODEL_NAME}##BQ_DEFAULT_LOCATION=${_BQ_DEFAULT_LOCATION}##VM_DEFAULT_ZONE=${_VM_DEFAULT_ZONE}##VM_DEFAULT_INSTANCE_NAME=${_VM_DEFAULT_INSTANCE_NAME}##VM_DEFAULT_MACHINE_TYPE=${_VM_DEFAULT_MACHINE_TYPE}##VM_DEFAULT_SOURCE_IMAGE=${_VM_DEFAULT_SOURCE_IMAGE}##VM_DEFAULT_DISK_SIZE_GB=${_VM_DEFAULT_DISK_SIZE_GB}##VM_DEFAULT_DISK_TYPE=${_VM_DEFAULT_DISK_TYPE}##VM_DEFAULT_SUBNETWORK=${_VM_DEFAULT_SUBNETWORK}##VM_DEFAULT_SERVICE_ACCOUNT=${_VM_DEFAULT_SERVICE_ACCOUNT}##MCP_SERVER_URL=https://${_SERVICE_NAME_MCP}-${_PROJECT_NUMBER}.${_REGION}.run.app##GITHUB_TOKEN=${_GITHUB_TOKEN}##MISTRAL_MODEL_ID=${_MISTRAL_MODEL_ID}##LANGGRAPH_A2A_ENDPOINT=https://${_SERVICE_NAME_LANGGRAPH}-${_PROJECT_NUMBER}.${_REGION}.run.app'
      - '--command=streamlit'
      - '--args=run,ui/app.py,--server.port=8080,--server.address=0.0.0.0,--server.headless=true'
      - '--memory=1Gi'
      - '--quiet'
    waitFor: ['Build-Python-App', 'Deploy-LangGraph-Agent', 'Deploy-MCP-Server']

substitutions:
  _GCP_PROJECT_ID: ''
  _PROJECT_NUMBER: ''
  _REGION: ''
  _REPO_ID: ''
  _PYTHON_APP_IMAGE_NAME: ''
  _MCP_IMAGE_NAME: ''
  _LANGGRAPH_IMAGE_NAME: ''
  _SERVICE_NAME_STREAMLIT: ''
  _SERVICE_NAME_MCP: ''
  _SERVICE_NAME_LANGGRAPH: ''
  _GOOGLE_API_KEY: ''
  _GITHUB_TOKEN: ''
  _AGENT_MODEL_NAME: ''
  _BQ_DEFAULT_LOCATION: ''
  _VM_DEFAULT_ZONE: ''
  _VM_DEFAULT_INSTANCE_NAME: ''
  _VM_DEFAULT_MACHINE_TYPE: ''
  _VM_DEFAULT_SOURCE_IMAGE: ''
  _VM_DEFAULT_DISK_SIZE_GB: ''
  _VM_DEFAULT_DISK_TYPE: ''
  _VM_DEFAULT_SUBNETWORK: ''
  _VM_DEFAULT_SERVICE_ACCOUNT: ''
  _MCP_SERVER_PORT: ''
  _LANGGRAPH_PORT: ''
  _MISTRAL_MODEL_ID: ''
  _ARTIFACT_REGISTRY_REPO: '${_REGION}-docker.pkg.dev/${_GCP_PROJECT_ID}/${_REPO_ID}'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
