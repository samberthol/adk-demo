# cloudbuild-feature.yaml
# SIMPLIFIED: Uses only SHORT_SHA for image tagging.
# This avoids all issues with branch name sanitization and parsing.
# ==============================================================================
# IMPORTANT: This file requires ALL substitution variables (starting with _)
#            to be provided when the build is triggered. No default values
#            are set here to avoid committing configuration or secrets.
# ==============================================================================
# WARNING: This configuration passes GEMINI_API_KEY as an environment variable
#          to Cloud Run. This is less secure than using Secret Manager.
#          Provide the key value securely when triggering the build.
# ==============================================================================

steps:
  # Step 1: Build the container image using SHORT_SHA for tag
  # Reverted to simpler docker command, no bash needed for tagging.
  - name: 'gcr.io/cloud-builders/docker'
    id: Build
    args:
      - 'build'
      - '-t'
      # Tag uses SHORT_SHA only (built-in variable)
      - '${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}'
      - '.'

  # Step 2: Push the container image tagged with SHORT_SHA
  - name: 'gcr.io/cloud-builders/docker'
    id: Push
    args:
      - 'push'
      # Push the image tagged with SHORT_SHA
      - '${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}'
    waitFor: ['Build']

  # Step 3: Deploy the image to Cloud Run tagged with SHORT_SHA
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Deploy
    entrypoint: gcloud # Reverted to default entrypoint
    args:
      - 'run'
      - 'deploy'
      # Service name provided via substitution
      - '${_SERVICE_NAME_FEATURE}'
      # Deploy the image tagged with SHORT_SHA
      - '--image=${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--port=8080'
      - '--allow-unauthenticated' # Adjust as needed
      # Pass runtime environment variables
      - '--set-env-vars=^##^GEMINI_API_KEY=${_GEMINI_API_KEY}##AGENT_MODEL_NAME=${_AGENT_MODEL_NAME}##BQ_DEFAULT_LOCATION=${_BQ_DEFAULT_LOCATION}##VM_DEFAULT_ZONE=${_VM_DEFAULT_ZONE}##VM_DEFAULT_INSTANCE_NAME=${_VM_DEFAULT_INSTANCE_NAME}##VM_DEFAULT_MACHINE_TYPE=${_VM_DEFAULT_MACHINE_TYPE}##VM_DEFAULT_SOURCE_IMAGE=${_VM_DEFAULT_SOURCE_IMAGE}##VM_DEFAULT_DISK_SIZE_GB=${_VM_DEFAULT_DISK_SIZE_GB}##VM_DEFAULT_DISK_TYPE=${_VM_DEFAULT_DISK_TYPE}##VM_DEFAULT_SUBNETWORK=${_VM_DEFAULT_SUBNETWORK}##VM_DEFAULT_SERVICE_ACCOUNT=${_VM_DEFAULT_SERVICE_ACCOUNT}##GCP_PROJECT_ID=${_GCP_PROJECT_ID}##REGION=${_REGION}'
      - '--quiet'
    waitFor: ['Push']

# images section: List the image tagged with SHORT_SHA
images:
  - '${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}'

# substitutions section remains the same (values must be provided at trigger time)
substitutions:
  _GCP_PROJECT_ID: ''
  _REGION: ''
  _REPO_ID: ''
  _IMAGE_NAME: ''
  _SERVICE_NAME_FEATURE: ''
  _GEMINI_API_KEY: ''
  _AGENT_MODEL_NAME: ''
  _BQ_DEFAULT_LOCATION: ''
  _VM_DEFAULT_ZONE: ''
  _VM_DEFAULT_INSTANCE_NAME: ''
  _VM_DEFAULT_MACHINE_TYPE: ''
  _VM_DEFAULT_SOURCE_IMAGE: ''
  _VM_DEFAULT_DISK_SIZE_GB: ''
  _VM_DEFAULT_DISK_TYPE: ''
  _VM_DEFAULT_SUBNETWORK: ''
  _VM_DEFAULT_SERVICE_ACCOUNT: ''
  _ARTIFACT_REGISTRY_REPO: '${_REGION}-docker.pkg.dev/${_GCP_PROJECT_ID}/${_REPO_ID}'

# options section remains the same
options:
  logging: CLOUD_LOGGING_ONLY